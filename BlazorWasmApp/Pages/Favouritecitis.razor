@page "/favorites"
@using BlazorWasmApp.Models
@inject FavoriteService FavoriteService

<div class="favorites-container">
    <h3 class="favorites-header">Favorite Cities</h3>

    @if (IsLoading)
    {
        <p>Loading favorites...</p>
    }
    else
    {
        <div class="input-container">
            <input @bind="NewCity" placeholder="Enter city name" class="input-field" />
            <button @onclick="AddFavoriteCity" class="add-button">Add</button>
        </div>

        <ul class="favorites-list">
            @foreach (var city in FavoriteCities)
            {
                <li class="favorite-item">
                    <span>@city.CityName</span>
                    <div class="action-buttons">
                        @if (city.IsHomeCity)
                        {
                            <span class="home-indicator">(Home)</span>
                        }
                        <button @onclick="() => SetHomeCity(city.CityName!)" class="home-button">🏠</button>
                        <button @onclick="() => RemoveFavorite(city.CityName!)" class="remove-button">❌</button>
                    </div>
                </li>
            }
        </ul>
    }
</div>

@code {
    private List<FavoriteCity> FavoriteCities = new();
    private string NewCity = string.Empty;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadFavorites();
    }

    private async Task LoadFavorites()
    {
        IsLoading = true;
        FavoriteCities = await FavoriteService.GetFavoritesAsync();
        IsLoading = false;
    }

    private async Task AddFavoriteCity()
    {
        if (string.IsNullOrWhiteSpace(NewCity)) return;

        if (await FavoriteService.AddFavoriteCityAsync(NewCity))
        {
            await LoadFavorites();
            NewCity = string.Empty;
        }
    }

    private async Task RemoveFavorite(string city)
    {
        if (await FavoriteService.RemoveFavoriteCityAsync(city))
        {
            await LoadFavorites();
        }
    }

    private async Task SetHomeCity(string city)
    {
        if (await FavoriteService.SetHomeCityAsync(city))
        {
            await LoadFavorites();
        }
    }
}

<style>
        .favorites-container {
        max-width: 600px;
        margin: 30px auto;
        padding: 20px;
        background: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

    .favorites-header {
        color: #007BFF;
        margin-bottom: 15px;
        text-align: center;
    }

    .input-container {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }

    .input-field {
        flex: 1;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .add-button {
        padding: 8px 15px;
        background-color: #007BFF;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s;
    }

    .add-button:hover {
        background-color: #0056b3;
    }

    .favorites-list {
        list-style: none;
        padding: 0;
    }

    .favorite-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #ddd;
        background: #ffffff;
        border-radius: 5px;
        margin-bottom: 5px;
    }

    .home-indicator {
        color: #28a745;
        font-weight: bold;
        margin-right: 10px;
    }

    .action-buttons {
        display: flex;
        gap: 5px;
    }

    .home-button, .remove-button {
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s;
    }

    .home-button {
        background-color: #ffc107;
        color: white;
    }

    .home-button:hover {
        background-color: #e0a800;
    }

    .remove-button {
        background-color: #dc3545;
        color: white;
    }

    .remove-button:hover {
        background-color: #c82333;
    }

</style>